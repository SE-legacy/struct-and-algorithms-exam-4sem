#import "../conf.typ": definition
== Простейшие функции
Числовые фукнции, значение которых можно установить посредством некоторого алгоритма, называются вычислимыми функциями.

Для того, чтобы описать клас функций с помощью рекурсивных определений, рассмотрим набор простейших функций:

+ $Z(x_1, x_2, ..., x_n) = 0$ --- нуль-функция, которая определена для всех неотрицательных значений аргумента;
+ $s(x) = x + 1$ --- функци непосредственного следования, также опрелённая для всех целых нотрицательных начений своего аргуумента
+ $I_m^n (x_1, dots, x_m, dots, x_n) = x_m$ --- функция выбора (тождества), повторяющая вычисления своих аргументов.

Используя простейшие функции в качестве исходных функций можно с помощью небольшого числа общих конструктивных приемов строить сложные арифметические функции. В теории рекурсивных функций особо важное значение имеют три операции: суперпозиции, примитивной рекурсии и минимизации.

== Оператор суперпозиции

Оператором суперпозиции $S$ называется подстановка в функцию от $m$ переменных $m$ функций от $n$ одних и тех же переменных. Она дает новую от $n$ переменных. Например, из функций $f(x_1, x_2, ..., x_m),...$ $,f_m(x_1, x_2, ..., x_m)$ можно получить новую функцию: 

$ S^(m+1)(f,f_1,f_2,...,f_m) = g(x_1,x_2,...,x_n) = f(f_1(x_1,...,x_n),...,f_m(x_1,...,x_n)) $

В операции суперпозиции $S^(m+1)$ индекс сверху указывает на число функций.

Таким образом, при помози оператора суперпозиции и функции выбора можно выразить любую подстановку функции в функцию.

=== Свойства операции суперпозиции

+ Операция суперпозиции сохраняет свойство всюду определенности функций, т.е если $f(x_1,...x_n),...,f_m(x_1,...,x_n)$ всюду определены, то и $ g(x_1,...,x_n) $ всюду определена.
+ Операция суперпозиции сохраняет свойство алгоритмической вычислимости функций.


=== Примеры

Суперпозиция функций: 

$ f(x) = 0$ и $ g(x) = x + 1)$ получим функцию $ h(x) = g(f(x)) = 0 + 1 = 1 $

При суперпозиции функция g(x) с этой же функцией получим функцию $h(x) = g(g(x)) = x + 2 $. 

Используя подстановку и функции тождества, можно представлять и отождествлять аргументы в функции: 

$ f(x_2, x_1, x_3,...,x_n) = f(I^2_2(x_1,x_2),I^2_1(x_1,x_2), x_3,...,x_n); $

$ f(x_1,x_1,x_3,...,x_n) = f(I^2_1(x_1,x_2),I^2_1(x_1,x_2), x_3,...,x_n);) $

Таким образом, если заданы функции тождества и операторы суперпозиции, то можно считать заданными всевозможные операторы подстановки функций в функции, а также преименования, перестановки и отождествления переменных.

== Оператор примитивной рекурсии

Оператор примитивной рекурси задается следующим образом:

Рекурсия ведется по одному аргументу, все остальные считаются параметрами. Известны две функции: $g(x_1,...,x_n)$ и  $h(x_1,...,x_n, y, z)$.

/ Определение.: Говорят, что функция $f(x_1,...,x_n, y)$ получена из функции $g(x_1, ..., x_n)$ и $h(x_1, ..., x_n, y,z)$ с помощью операции примитивной рекурсии, если выполняются следующие равенства:

$f(x_1,...,x_n,0) = g(x_1,...,x_n)$


$f(x_1,...,x_n, y + 1) = h(x_1,...,x_n, y , f(x_1,...x_n, y))$


Это определение имеет смысл, когда $n eq.not 0$, при этом записывается 

$f(x_1,...,x_n, y) = R(g(x_1,...,x_n),h(x_1,...,x_n,y,z))$

или сокращено

$ f = R(g, h) $

где $R$ --- *оператор примитивной рекурсии*.

Простыми словами, начальное значение $f(..., 0) = g(...)$, а все последующие определяются значением другой функции для предыдущего: $f(..., y + 1) = h(..., y)$.

Опрератором примитивной рекурсии $R_n$ позволяет определить $(n+1)$ --- местную функцию $f$ по двум заданным функциям, одна из которых является $n$-местной функцией $g$, а другая $(n+2)$-местной функцией $h$

Приведенная пара равенств называется схемой примитивной рекурсии. 

*Основные свойства операции примитивной рекурсии.*

Всякая ПРФ является всюду определённой функцией.
Всякая ПРФ является алгоритмически вычислимой. 

#definition[Функция примитивно-рекурсивная $<=>^"df"$ она является элементарной или может быть получена из элементарных функций с помозью конечного числа применений операторов тождества, суперпозиции и примитивной рекурсии.]
- Если некоторые функции являются примитивно-рекурсивными, то в результате применения к ним операторов суперпозиции или примитивной рекурсии можно получить новые ПРФ
- Существует три возможности доказательства того, что функция является примитивно-рекурсивной:
+ Показать, что заданная функция является простейшей.
+ Показать, что заданная функция построена с помощью оператора суперпозиции.
+ Показать, что заданная функция построена с помощью оператора примитивной рекурсии.


== Оператор минимизации

/ Оператор минимизации $M$ ($mu$-оператор): Пусть задана некоторая частичная функция $g(z, overline(x))$. В результате применения оператора минимизации мы получаем новую функцию, которая вычисляется следующим образом:

$ f(overline(x)) = y <=> forall i < y space ( g(i, overline(x)) " опр." and g(i, overline(x)) != 0 ) and (g(y, overline(x)) = 0) $

$mu$-оператор записывается следующим образом:

$ f(overline(x)) tilde.eq mu y (g(y, overline(x)) = 0) $

Короче говоря, $f(overline(x))$ --- минимальное $y$ такое, что $g(y, overline(x)) = 0$.

== Тезис Чёрча

#definition[*Частично-рекурсивная функция* --- функция, которая может быть получина из простейших функции с помощью конечного числа операторов суперпозиции, примитивной рекурсии и минимизации.]

#definition[*Общерекурсивная функция* --- всюду определённая частично-рекурсивная функция]

/ Тезис Чёрча (для частично рекурсивных функций): Класс алгоритмически вычислимых функций совпадает с классом всех частично рекурсивных функций. Принятие данного тезиса позволяет истолковывать доказательство, что некоторая функция не является частичо рекурсивной, как доказательство отсутствия алгоритма вычисления ее значений

Всякая функция, вычислимая с помощью машины Тьюринга, является частично рекусивной.

Всякая частично рекурсивная функция вычислима на машине Тьюринга

$K_"ПРФ" subset.eq K_"ОРФ" subset.eq K_"ЧРФ"$, где:
- $K_"ПРФ"$ --- класс примитивно рекурсивных функций
- $K_"ОРФ"$ --- класс общерекурсивных функций
- $K_"ЧРФ"$ --- класс частично-рекурсивных функций

== Примеры и способы задания рекурсивных функций

_Сафрончик этого материала не давала, подгон от деда Дани_

Рекурсивная функция может быть задана:
- *Прямо*, когда даётся базовый и рекурсивный случай
- *Косвенно*, когда две функции вызывают друг друга

Функция факториала:
$
f(n) = cases(
  1\, " если " n = 0,
  n * f(n - 1)\, " если " n > 0
)
$
