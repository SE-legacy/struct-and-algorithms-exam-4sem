#import "../conf.typ": definition

Алгоритм поиска подстроки в строке, разработанный Робертом Бойером и Стивеном Муром, считается наиболее быстрым среди алгоритмов общего назначения для поиска шаблонов.

Отметим, что сравнение символов шаблона идёт _справа налево_.

Алгоритм использует две эвристические функции для определения величины сдвига при несовпадении:

Эвристика плохого символа (стоп-символа):
- При несовпадении символа ищем его последнее вхождение в шаблоне
- Сдвигаем шаблон так, чтобы символы выровнялись
- Если символа нет в шаблоне — сдвигаем на всю длину шаблона

Эвристика хорошего суффикса (совпавшего суффикса):
- Использует уже совпавшую часть шаблона
- Ищет другие вхождения совпавшего суффикса в шаблоне
- Сдвигает на расстояние до ближайшего совпадения

Выбирается максимальный сдвиг из двух эвристик.

Асимптотика варьируется:
- *Лучший случай:* $O(n/m)$ — по эвристике плохого символа постоянно происходит сдвиг на всю длину слова
- *Средний случай:* $O(n)$
- *Худший случай:* $O(n m)$ — символы из шаблона постоянно повторяются (сломает хороший суффикс), плохой символ постоянно сдвигает только на 1 символ
